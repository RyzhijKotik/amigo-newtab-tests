========================================================================================================================
Что это?

Тесты страницы chrome://newtab в браузере Амиго или Google Chrome
========================================================================================================================

Как это устроено?

Основная идея та же, что и гугловых тестов инсталлера -- в json'ах фреймфорк, в скриптах -- проверки

В файле newtab.config есть три блока:

states -- содержит набор свойств (.prop) страницы chrome://newtab, которые нужно верифицировать
(свойство страницы -- это некий набор элементов, который должен присутствовать на странице)
actions -- содержит набор действий, который можно произвести на странице (открыть, закрыть, кликнуть, навести мышь...)
tests -- набор чередующихся (actions, states), которые нужно (выполнить, проверить)

файл .prop -- это некий уникальный набор элементов на странице (тайлы, контрол переключения борды, имя страницы...)
.prop может содержать как один элемент, так и несколько

.py скрипт new_tab_tests парсит .config и .prop'ы, извлекая из них наборы тестов, действий и состояний,
а потом запускает эти тесты с помощью питоновского модуля unittest
вспомогательные .py-скрипты (command_runner, element_verifier....) запускают конкретные действия, верифицируют конкретные элементы и т.п.
========================================================================================================================

Как запустить из PyCharm?

В PyCharm Run-> Edit Configurations прописать конфигурацию:
Script: C:\git\new_tab_tests\new_tab_tests_runner.py
Script parameters: --binary-path="\Amigo\Application\amigo.exe" --crx-url="http://service.amigo.mail.ru/exts/amigo_tab_page/amigo_tab_page_2.16.17.crx" --config "C:\git\new_tab_tests\config\newtab.config"
--binary-path -- это путь к бинарю amigo.exe
--crx-url -- урл, по которому можно достать расширение newtab
--config -- путь к файлу newtab.config
========================================================================================================================

Как дописывать тесты?

Если нужно добавить новые элементы, то создается (или редактируется существующий) файл .prop и в него добавляется
словарь элементов (по аналогии с уже существующими файлами .prop)
Если проверяются элементы на страницк, то имя словаря должно содержать слово Elements
NB! Имя словаря должно быть уникальным (т.е. не совпадать с любим из уже имеющихся имен словарей в prop-файлах), иначе
первый словарь перезапишется вторым. При парсинге на это выдается варнинг.
Элемент записывается в словарь виде {"ИмяЭлемента": "XPATH"}

В файле config:
Проверка состояния страницы записывается в блок states в виде ["имя_состояния",  [массив .prop-файлов]] по аналогии с уже существующими

Действие на странице добавляется в блок actions в newtab. config виде ["имя_действия", "действие"] по аналогии с уже существующими

Тест добавляется в блок tests в виде {имя теста, набор чередующихся действий и состояний

========================================================================================================================
Отчеты о выполненных тестах:

Хранятся в папке test-reports в формате xml
В случае если тест валится, то снимается скриншот страницы, на которой он свалился. Скриншоту дается имя (из .prop-файлв)
по элементу, на котором запнулся тест. Скриншоты хранятся в папке screenshots.



